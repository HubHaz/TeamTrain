version: '3.9'

services:
  # PostgreSQL
  postgres:
    image: postgres:16
    restart: always
    container_name: teamtrain_postgres
    environment:
      POSTGRES_USER: teamtrain
      POSTGRES_PASSWORD: teamtrain_pw
      POSTGRES_DB: teamtrain_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis
  redis:
    image: redis:7-alpine
    restart: always
    container_name: teamtrain_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: teamtrain_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    container_name: teamtrain_kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  # Your .NET Web API
  teamtrain_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: teamtrain_api
    ports:
      - "8080:80"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=teamtrain_db;Username=teamtrain;Password=teamtrain_pw
      Redis__ConnectionString: redis:6379
      Serilog__WriteTo__1__Args__nodeUris__0: http://elasticsearch:9200

volumes:
  postgres_data:
  redis_data:
  es_data:
